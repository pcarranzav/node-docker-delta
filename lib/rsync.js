// Generated by CoffeeScript 1.12.2
(function() {
  var Promise, fs, mkfifoSync, path, spawn, tmp;

  Promise = require('bluebird');

  fs = require('fs');

  tmp = require('tmp');

  path = require('path');

  mkfifoSync = require('mkfifo').mkfifoSync;

  spawn = require('child_process').spawn;

  exports.createRsyncStream = function(src, dest) {
    return new Promise(function(resolve, reject) {
      return tmp.dir({
        unsafeCleanup: true
      }, function(err, tmpDirPath, cleanup) {
        var pipePath, ps, rsyncArgs;
        pipePath = path.join(tmpDirPath, 'rsync.pipe');
        mkfifoSync(pipePath, 0x180);
        rsyncArgs = ['--archive', '--compress', '--no-i-r', '--delete', '--hard-links', '--compress-level=9', '--one-file-system', '--only-write-batch', pipePath, dest, src];
        ps = spawn('rsync', rsyncArgs).on('error', function(error) {
          console.error('rsync error', error);
          return ps.stdout.emit('error', error);
        }).on('exit', function(code, signal) {
          if (code !== 0) {
            return ps.stdout.emit('error', new Error("rsync exited. code: " + code + " signal: " + signal));
          }
        });
        ps.stderr.pipe(process.stderr);
        ps.stdout.pipe(process.stdout);
        return resolve(fs.createReadStream(pipePath).on('close', cleanup));
      });
    });
  };

}).call(this);
